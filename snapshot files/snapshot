#!/bin/bash
function Usage {
    echo "Usage:"
    echo "snapshot <task> [arguments]..."
    echo -e "  check   | This will check each share to see if it is capable of"
    echo -e "          | creating snapshots for."
    echo -e "          |"
    echo -e "  convert | This will convert a share to a btrfs sub volume."
    echo -e "          | This is required in order to create snapshots for a share"
    echo -e "          | Use '-all' to convert all existing shares."
    echo -e "          |"
    echo -e "  create  | This will create a snapshot for the share specified."
    echo -e "          |"
    echo -e "  list    | This will return a list of all the existing snapshots."
    echo -e "          |"
    echo -e "  remove  | This will remove the snapshot and it's data based on the"
    echo -e "          | ID passed through. Run 'list' to find out what the IDs are."
    echo -e "          | If you use '-y' at the end it won't ask for confirmation."
    echo -e "          |"
    echo -e "  restore | This doesn't work right now"
#    echo -e "  restore | This will restore the data from a snapshot to it's original"
#    echo -e "          | share.\\e[31;1m This will overwrite the entire share, not just\\e[0m"
#    echo -e "          | \\e[31;1mthe files that are affected. You may want to create an\\e[0m"
#    echo -e "          | \\e[31;1madditional snapshot of the share if you are unsure.\\e[0m"
    echo -e "          |"
    echo -e "  mount   | This will mount a copy of a snapshot as a new share."
    echo -e "          |"
    echo -e "  unmount | Unmount a previously mounted snapshot."
    exit
}

if [[ $# -eq 0 ]] || [[ $1 == "" ]]; then
    Usage
else
    command="$1"
    CURDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    cd "$CURDIR"
    if [[ $command == "check" ]]; then
        python3 "snapshot_scripts/btrfs_share_checker.py"
    elif [[ $command == "convert" ]]; then
        python3 "snapshot_scripts/btrfs_share_converter.py" "$2"
    elif [[ $command == "create" ]]; then
        python3 "snapshot_scripts/create_snapshot.py" "$2" "$3" "$4"
    elif [[ $command == "list" ]]; then
        python3 "snapshot_scripts/get_snapshots.py"
    elif [[ $command == "remove" ]]; then
        python3 "snapshot_scripts/remove_snapshot.py" "$2" "$3"
#    elif [[ $command == "restore" ]]; then
#        python3 "snapshot_scripts/restore_snapshot.py" "$2" "$3"
    elif [[ $command == "mount" ]]; then
        python3 "snapshot_scripts/mount_snapshot.py" "$2" "$3" "$4"
    elif [[ $command == "unmount" ]]; then
        python3 "snapshot_scripts/unmount_snapshot.py" "$2"
    else
        Usage
    fi
fi
